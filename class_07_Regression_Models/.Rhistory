x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
lm(w~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x+0)
data(mtcars)
data=mtcars
mtcars=mtcars
lm(mpq~outcome,data=mtcars)
lm(mpg~outcome,data=mtcars)
names(mtcars)
lm(mpg~weight ,data=mtcars)
lm(mpg~wt ,data=mtcars)
.5*(1/.5)
b_1=.4*(1/1)
b_1=.4*(1/1)
pred=0+1.5*b_1
pred
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
mean(y)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm(x~x)
cor(x,x)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(x * w)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x+0)
data(mtcars)
mtcars=mtcars
lm(mpg~wt ,data=mtcars)
.5*(1/.5)
b_1=.4*(1/1)
pred=0+1.5*b_1
pred
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
# What is the value of the first measurement if x were normalized (to have mean 0 and variance 1)?
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
# What value minimizes the sum of the squared distances between these points and itself?
mean(x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
summry(lm(y~x))
summary(lm(y~x))
q1_model=lm(y~x)
summary(q1_model)
sd(resid(q1_model))
summary(q1_model)
str(q1_model)
q1_model$residuals
sd(q1_model$residuals)
sqrt(deviance(q1_model)/df.residual(q1_model))
lm(wt~mpg ,data=mtcars)
lm(wt~mpg-mean(mpg) ,data=mtcars)
lm(wt~(mpg-mean(mpg) ),data=mtcars)
lm(wt~mpg ,data=mtcars)
q3_model=lm(wt~mpg ,data=mtcars)
?predict6
?predict
q3_model=lm(wt~I(mpg-mean(mpg)) ,data=mtcars)
q3_model
q3_model=lm(wt~mpg ,data=mtcars)
predict(q3_model,mean(mpg))
q3_model=lm(wt~mpg ,data=mtcars)
predict(q3_model,mean(mtcars$mpg))
mean(mtcars$mpg)
q3_model=lm(wt~mpg ,data=mtcars)
q3_model
predict(q3_model,mean(mtcars$mpg))
predict(q3_model,newdata=mean(mtcars$mpg))
predict(q3_model,newdata=data.frame(mean(mtcars$mpg)))
data.frame(mean(mtcars$mpg))
predict(q3_model,newdata=data.frame(mpg=mean(mtcars$mpg)))
q3_pred=predict(q3_model,newdata=data.frame(mpg=mean(mtcars$mpg)))
str(q3_pred)
conf.int(q3_pred)
confint(q3_pred)
q3_pred
q3_pred=predict(q3_model,newdata=data.frame(mpg=mean(mtcars$mpg)),interval = ("confidence"))
q3_pred
q3_pred=predict(q3_model,newdata=data.frame(mpg=mean(mtcars$mpg)),interval = ("prediction"))
q3_pred
q3_model=lm(mpg~ wt,data=mtcars)
q3_pred=predict(q3_model,newdata=data.frame(st=mean(mtcars$st)),interval = ("confidence"))
q3_pred
q3_pred=predict(q3_model,newdata=data.frame(wt=mean(mtcars$st)),interval = ("confidence"))
q3_pred
q3_pred
q3_model=lm(mpg~ wt,data=mtcars)
q3_pred=predict(q3_model,newdata=data.frame(wt=mean(mtcars$wt)),interval = ("confidence"))
q3_pred
predict(q3_model,newdata=data.frame(wt=mean(mtcars$wt)),interval = ("prediction"))
q3_model
?mtcars
predict(q3_model,newdata=data.frame(wt=3),interval = ("confidence"))
predict(q3_model,newdata=data.frame(wt=3),interval = ("prediction"))
predict(q3_model,newdata=data.frame(wt=2),interval = ("prediction"))
predict(q3_model,newdata=data.frame(wt=2),interval = ("confidence"))
predict(q3_model,newdata=data.frame(wt=4),interval = ("confidence"))
predict(q3_model,newdata=data.frame(wt=2),interval = ("confidence"))
q6_model <- lm(mpg ~ I(wt / 2),data=mtcars)
tbl2 <- summary(q6_model)$coefficients
q6_model <- lm(mpg ~ I(wt / 2),data=mtcars)
tbl <- summary(q6_model)$coefficients
mean <- tbl[2,1]
se <- tbl[2,2]
mean
se
tbl
df <- q6_model$df
df
mean + c(-1,1) * qt(0.975, df=df) * se
fitRes <- q3_model$residuals ^ 2
fitRes
fitIntercept <- lm(mpg ~ 1, mtcars)
fitIntercept
fitInterceptRes <- fitIntercept$residuals ^ 2
sum(fitRes) /sum(fitInterceptRes)
data(mtcars)
mtcars=mtcars
View(mtcars)
lm(mpg~cyl,data=mtcars)
lm(mpg~I(cyl),data=mtcars)
mtcars$cyl=as.factor(mtcars$cyl)
lm(mpg~cyl),data=mtcars)
lm(mpg~cyl,data=mtcars)
levels(mtcars$cyl)
lm(mpg~cyl+wt,data=mtcars)
q1_fit=lm(mpg~cyl+wt,data=mtcars)
q2_fit=lm(mpg~cyl,data=mtcars)
q1_fit
q2_fit
q3_fit=lm(mpg~cyl*wt,data=mtcars)
q3_fit
summary(q3_fit)
result <- anova(q1_fit, q3_fit, test="Chi")
result
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
lm(mpg ~ I(wt * 0.5) + cyl, data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
round(hatvalues(lm(y~x))[1 : 10], 3)
hatvalues(lm(y~x))
max(hatvalues(lm(y~x)))
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbeta(lm(y~x))
hatvalues(lm(y~x))
which(hatvalues(lm(y~x))==max(hatvalues(lm(y~x))))
highest_hat=which(hatvalues(lm(y~x))==max(hatvalues(lm(y~x))))
dfbeta(lm(y~x))[highest_hat]
highest_hat
dfbeta(lm(y~x))
dfbeta(lm(y~x))[highest_hat,]
highest_hat
dfbeta(lm(y~x))[highest_hat,]
dfbetas(lm(y~x))[highest_hat,]
dfbetas(lm(y~x))
plot(y,x)
plot(x,y)
highest_hat=as.integer(which(hatvalues(lm(y~x))==max(hatvalues(lm(y~x)))))
highest_hat
dfbetas(lm(y~x))[highest_hat,]
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
splineTerms
knots
data(shuttle)
library(MASS)
data(shuttle)
shuttle=shuttle
View(shuttle)
names(shuttle)
glm(use ~ auto+wind, data = shuttle,family="binomial")
summary(shuttle)
glm(use ~ wind, data = shuttle,family="binomial")
shuttle$wind=as.factor(shuttle)
shuttle$wind=as.factor(shuttle$wind)
glm(use ~ wind, data = shuttle,family="binomial")
glm(use ~ wind+0, data = shuttle,family="binomial")
q1_fit=glm(use ~ wind+0, data = shuttle,family="binomial")
q1_fit=glm(use ~ wind+0, data = shuttle,family="binomial")
coef(q1_fit)
coef(q1_fit)[1/coef(q1_fit)[2]
coef(q1_fit)[1]/coef(q1_fit)[2]
coef(q1_fit)[1]/coef(q1_fit)[2]
q1_fit=glm(use ~ wind-1, data = shuttle,family="binomial")
coef(q1_fit)[1]/coef(q1_fit)[2]
q1_fit
exp(coef(q1_fit)[1])/exp(coef(q1_fit)[2])
summary(q1_fit)
summary(q1_fit)$coef
coef(q1_fit)
exp_coef=exp(coef(q1_fit))
exp_coef
exp_coef[1]/exp_coef[2]
wind
summary(shuttle)
table(shuttle$wind,shuttle$use)
coef(q1_fit)
coef(q1_fit)[1]/coef(q1_fit)[2]
library(MASS)
dim(shuttle)
head(shuttle)
shuttle$newUse <- as.numeric(shuttle$use == "auto")
fit <- glm(newUse ~ as.factor(wind) - 1, data=shuttle, family="binomial")
summary(fit)
coef(fit)
odds <- exp(summary(fit)$coef)
odds[1] / odds[2]
library(MASS)
data(shuttle)
shuttle=shuttle
summary(shuttle)
shuttle$wind=as.factor(shuttle$wind)
table(shuttle$wind,shuttle$use)
q1_fit=glm(use ~ wind+0, data = shuttle,family="binomial")
coef(q1_fit)
exp_coef
odds
odds[1]
exp_coef
exp_coef=exp(summary((q1_fit)$coef)
exp_coef
exp_coef=exp(summary((q1_fit)$coef)
)
exp_coef
exp_coef=exp(summary(q1_fit)$coef)
exp_coef
odds
summary(q1_fit)$coef
q1_fit=glm(use ~ wind+0, data = shuttle,family="binomial")
q1_fit
summary(fit)
summary(q1_fit)
exp(summary(fit)$coef)
exp(summary(q1_fit)$coef)
library(MASS)
data(shuttle)
shuttle=shuttle
summary(shuttle)
shuttle$wind=as.factor(shuttle$wind)
shuttle$newUse <- as.numeric(shuttle$use == "auto")
table(shuttle$wind,shuttle$use)
q1_fit=glm(use ~ wind+0, data = shuttle,family="binomial")
exp_coef=exp(summary(q1_fit)$coef)
exp_coef[1]/exp_coef[2]
q1_fit
exp_coef=exp(summary(q1_fit)$coef)
exp_coef
View(shuttle)
library(MASS)
data(shuttle)
shuttle=shuttle
summary(shuttle)
shuttle$wind=as.factor(shuttle$wind)
shuttle$use <- as.numeric(shuttle$use == "auto")
table(shuttle$wind,shuttle$use)
q1_fit=glm(use ~ wind+0, data = shuttle,family="binomial")
exp_coef=exp(summary(q1_fit)$coef)
exp_coef[1]/exp_coef[2]
q2_fit=glm(use ~ wind+magn+0, data = shuttle,family="binomial")
exp_coef=exp(summary(q2_fit)$coef)
exp_coef[1]/exp_coef[2]
data(InsectSprays)
InsectSprays=InsectSprays
summary(InsectSprays)
class(InsectSprays$spray)
class(InsectSprays$count)
data(InsectSprays)
InsectSprays=InsectSprays
summary(InsectSprays)
glm(count~spray,family="poisson",data=InsectSprays)
glm(count~spray+0,family="poisson",data=InsectSprays)
q4_fit=glm(count~spray+0,family="poisson",data=InsectSprays)
coef(q4_fit)
q4_fit=glm(count~spray+0,family="poisson",data=InsectSprays)
coef(q4_fit)
exp_coef=exp(coef(q4_fit))
exp_coef
exp_coef[1]/exp_coef[2]
knots <- 0
spline <- sapply(knots, function(knot) (x > knot) * (x - knot))
spline
xMatrix <- cbind(1, x, spline)
xMatrix
fit <- lm(y ~ xMatrix +0)
fit
pred <- predict(q6_fit)
q6_fit <- lm(y ~ xMatrix +0)
pred <- predict(q6_fit)
pred
q6_fit
coef(q6_fit)
plot(x, y)
lines(x, pred, col=2)
x <- -5 : 5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54,
3.87, 4.97)
knotPoint <- c(0)
spline <- sapply(knotPoint, function(knot) (x > knot) * (x - knot))
xMatrix <- cbind(1, x, spline)
fit <- lm(y ~ xMatrix - 1)
yhat <- predict(fit)
yhat
slope <- fit$coef[2] + fit$coef[3]
slope # 1.013
plot(x, y)
lines(x, yhat, col=2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- 0
spline <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMatrix <- cbind(1, x, spline)
q6_fit <- lm(y ~ xMatrix +0)
q6_fit
xMatrix
slope <- coef(q6_fit)
slope
coef(q6_fit)
plot(x, y)
lines(x, pred, col=2)
pred <- predict(q6_fit)
plot(x, y)
lines(x, pred, col=2)
q6_fit
summary(q6_fit)
coef(q6_fit)[1]+coef(q6_fit)[2]
coef(q6_fit)[2]+coef(q6_fit)[3]
