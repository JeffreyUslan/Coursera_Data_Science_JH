shiny::runApp()
shinyapps::deployApp()
shinyapps::deployApp()
shinyapps::deployApp()
shiny::runApp()
shiny::runApp()
source('~/Coursera_Data_Science_JH/class_09_Developing_Data_Products/Fourier_Smoother/gui_functions.R', echo=TRUE)
plot.df=fourier_smoother(Threshold,heur="Frequency")
Threshold=50
plot.df=fourier_smoother(Threshold,heur="Frequency")
exists(plot.df)
exists("plot.df")
shiny::runApp()
devtools::install_github('jbryer/DataCache')
library('DataCache')
plot.df=fourier_smoother(Threshold,heur="Frequency")
cache.date1 <- data.cache(plot.df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
len=1000
x=seq(1:len)
time     <- 1
w        <- 2*pi/time
ts       <- seq(time/len,time,1/len)
sin_1=.99*sin(1*w*ts)
sin_2=.9*sin(6*w*ts)
sin_4=.5*sin(26*w*ts)
sin_8=.8*sin(133*w*ts)
sin_16=.7*sin(400*w*ts)
clean_period=sin_1+sin_2+sin_4+sin_8+sin_16
noise=rnorm(len,mean=0,sd=.5)
sim_data = clean_period+noise
qplot(data=data.frame(x=1:len,y=sim_data))
len=1000
x=seq(1:len)
time     <- 1
w        <- 2*pi/time
ts       <- seq(time/len,time,1/len)
sin_1=.99*sin(1*w*ts)
sin_2=.9*sin(6*w*ts)
sin_4=.5*sin(26*w*ts)
sin_8=.8*sin(133*w*ts)
sin_16=.7*sin(400*w*ts)
clean_period=sin_1+sin_2+sin_4+sin_8+sin_16
noise=rnorm(len,mean=0,sd=.5)
sim_data = clean_period+noise
plot.df=data.frame(x=1:len,sim_data=sim_data)
ggplot()+
geom_line(data=plot.df,aes(x=x,y=sim_data))+
ylab("Simulated Data")+xlab("Time")
- Bullet 2
shiny::runApp()
